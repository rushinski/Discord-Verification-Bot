const { EmbedBuilder } = require('discord.js');
const translate = require('@iamtraction/google-translate');

const emojiLanguageMap = {
  'ðŸ‡¬ðŸ‡§': 'en', 'ðŸ‡ºðŸ‡¸': 'en', 'ðŸ‡¦ðŸ‡º': 'en', 'ðŸ‡¨ðŸ‡¦': 'en', 'ðŸ‡³ðŸ‡¿': 'en', 'ðŸ‡®ðŸ‡ª': 'en',
  'ðŸ‡¨ðŸ‡µ': 'fr', 'ðŸ‡«ðŸ‡·': 'fr', 'ðŸ‡©ðŸ‡ª': 'de', 'ðŸ‡ªðŸ‡¸': 'es', 'ðŸ‡®ðŸ‡¹': 'it', 'ðŸ‡µðŸ‡¹': 'pt', 'ðŸ‡·ðŸ‡´': 'ro',
  'ðŸ‡³ðŸ‡±': 'nl', 'ðŸ‡¸ðŸ‡ª': 'sv', 'ðŸ‡µðŸ‡±': 'pl', 'ðŸ‡­ðŸ‡º': 'hu', 'ðŸ‡«ðŸ‡®': 'fi', 'ðŸ‡©ðŸ‡°': 'da',
  'ðŸ‡¨ðŸ‡¿': 'cs', 'ðŸ‡³ðŸ‡´': 'no', 'ðŸ‡¬ðŸ‡·': 'el', 'ðŸ‡¯ðŸ‡µ': 'ja', 'ðŸ‡°ðŸ‡·': 'ko', 'ðŸ‡¨ðŸ‡³': 'zh-CN',
  'ðŸ‡¹ðŸ‡¼': 'zh-TW', 'ðŸ‡®ðŸ‡³': 'hi', 'ðŸ‡»ðŸ‡³': 'vi', 'ðŸ‡¹ðŸ‡­': 'th', 'ðŸ‡®ðŸ‡©': 'id', 'ðŸ‡®ðŸ‡±': 'he',
  'ðŸ‡µðŸ‡­': 'tl', 'ðŸ‡¸ðŸ‡¦': 'ar', 'ðŸ‡¦ðŸ‡ª': 'ar', 'ðŸ‡·ðŸ‡º': 'ru', 'ðŸ‡ºðŸ‡¦': 'uk', 'ðŸ‡§ðŸ‡¾': 'be',
  'ðŸ‡·ðŸ‡¸': 'sr', 'ðŸ‡§ðŸ‡¬': 'bg', 'ðŸ‡¸ðŸ‡°': 'sk', 'ðŸ‡¸ðŸ‡®': 'sl', 'ðŸ‡­ðŸ‡·': 'hr', 'ðŸ‡²ðŸ‡°': 'mk',
  'ðŸ‡¿ðŸ‡¦': 'af', 'ðŸ‡³ðŸ‡¬': 'yo', 'ðŸ‡°ðŸ‡ª': 'sw', 'ðŸ‡ªðŸ‡¬': 'ar', 'ðŸ‡¹ðŸ‡·': 'tr', 'ðŸ‡§ðŸ‡·': 'pt',
  'ðŸ‡²ðŸ‡½': 'es'
};

const languageNames = {
  'en': 'English ðŸ‡¬ðŸ‡§', 'fr': 'French ðŸ‡«ðŸ‡·', 'de': 'German ðŸ‡©ðŸ‡ª', 'es': 'Spanish ðŸ‡ªðŸ‡¸', 'it': 'Italian ðŸ‡®ðŸ‡¹',
  'pt': 'Portuguese ðŸ‡µðŸ‡¹', 'ro': 'Romanian ðŸ‡·ðŸ‡´', 'nl': 'Dutch ðŸ‡³ðŸ‡±', 'sv': 'Swedish ðŸ‡¸ðŸ‡ª', 'pl': 'Polish ðŸ‡µðŸ‡±',
  'hu': 'Hungarian ðŸ‡­ðŸ‡º', 'fi': 'Finnish ðŸ‡«ðŸ‡®', 'da': 'Danish ðŸ‡©ðŸ‡°', 'cs': 'Czech ðŸ‡¨ðŸ‡¿', 'no': 'Norwegian ðŸ‡³ðŸ‡´',
  'el': 'Greek ðŸ‡¬ðŸ‡·', 'ja': 'Japanese ðŸ‡¯ðŸ‡µ', 'ko': 'Korean ðŸ‡°ðŸ‡·', 'zh-CN': 'Simplified Chinese ðŸ‡¨ðŸ‡³',
  'zh-TW': 'Traditional Chinese ðŸ‡¹ðŸ‡¼', 'hi': 'Hindi ðŸ‡®ðŸ‡³', 'vi': 'Vietnamese ðŸ‡»ðŸ‡³', 'th': 'Thai ðŸ‡¹ðŸ‡­',
  'id': 'Indonesian ðŸ‡®ðŸ‡©', 'he': 'Hebrew ðŸ‡®ðŸ‡±', 'tl': 'Filipino ðŸ‡µðŸ‡­', 'ar': 'Arabic ðŸ‡¸ðŸ‡¦', 'ru': 'Russian ðŸ‡·ðŸ‡º',
  'uk': 'Ukrainian ðŸ‡ºðŸ‡¦', 'be': 'Belarusian ðŸ‡§ðŸ‡¾', 'sr': 'Serbian ðŸ‡·ðŸ‡¸', 'bg': 'Bulgarian ðŸ‡§ðŸ‡¬', 'sk': 'Slovak ðŸ‡¸ðŸ‡°',
  'sl': 'Slovenian ðŸ‡¸ðŸ‡®', 'hr': 'Croatian ðŸ‡­ðŸ‡·', 'mk': 'Macedonian ðŸ‡²ðŸ‡°', 'af': 'Afrikaans ðŸ‡¿ðŸ‡¦', 'yo': 'Yoruba ðŸ‡³ðŸ‡¬',
  'sw': 'Swahili ðŸ‡°ðŸ‡ª', 'tr': 'Turkish ðŸ‡¹ðŸ‡·'
};

module.exports = {
  name: 'messageReactionAdd',
  async execute(reaction, user) {
    if (user.bot) return;

    const { message, emoji } = reaction;
    const languageCode = emojiLanguageMap[emoji.name];

    if (!languageCode) return;

    try {
      const notifyMessage = await message.reply({
        content: `Reaction detected! Translating to ${emoji.name}...`,
      });

      // Translate to English first to infer the original language
      const detectedTranslation = await translate(message.content, { to: 'en' });
      const originalLanguageCode = detectedTranslation.from.language.iso;
      const originalLanguageName = languageNames[originalLanguageCode] || 'Unknown Language';

      // Translate to the target language
      const translated = await translate(message.content, { to: languageCode });
      const translatedLanguageName = languageNames[languageCode] || 'Unknown Language';

      const embed = new EmbedBuilder()
        .setColor('Blue')
        .setTitle('Translation Successful')
        .addFields(
          {
            name: `Original Text (${originalLanguageName})`,
            value: message.content || 'No text provided.',
          },
          {
            name: `Translated Text (${translatedLanguageName})`,
            value: translated.text || 'Translation failed.',
          }
        )
        .setFooter({
          text: `${user.username}`,
          iconURL: user.displayAvatarURL({ dynamic: true }),
        });

      if (notifyMessage.deletable) {
        setTimeout(() => notifyMessage.delete().catch(() => {}), 5000);
      }

      await message.reply({ embeds: [embed] });
    } catch (error) {
      console.error('Error translating message:', error);
      const errorEmbed = new EmbedBuilder()
        .setColor('Red')
        .setTitle('Translation Failed')
        .setDescription(
          'An error occurred while attempting to translate the message. Please try again later or contact support.'
        )
        .setFooter({
          text: `${user.username}`,
          iconURL: user.displayAvatarURL({ dynamic: true }),
        });

      await message.reply({ embeds: [errorEmbed] });
    }
  },
};
